in config;

use std::{io, config::_};
use std::conv::errors;

class A {
    pub let x : u32;

    pub self (cfg : &Config)
        with x = cfg ["foo"].to!{u32} ()
        throws CastFailure, ConfigError
    {
        cfg;
    }

    pub self ()
        with x = 10
    {}
}

__test {

    let dmut a = copy Dict ();
    a:["foo"] = copy Int (12);

    println (a);
}

__test {
    let dmut z = copy Array ();
    let dmut m = copy Dict ();

    m:["foo"] = copy Int (89);
    z:.push (m);

    let result = z.to!{[&A]} ();
    assert (result.len == 1 && result [0].x == 89);
}
