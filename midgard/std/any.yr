in any;

@abstract
pub class Any {

    prot self () {}

    pub fn unwrap {T} (self)-> (T)? {
        if let Some!{T} (value-> v) = self {
            return (v)?;
        }

        none
    }

}

@final
pub class Some {T} over Any {

    let _val : T;

    pub self (val : T)
        with _val = val
    {}

    @field
    pub fn value (self)-> T {
        self._val
    }

}

@final
pub class None over Any {
    pub self () {}
}
