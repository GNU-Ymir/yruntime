in nodes;

/**
 * Encode a node of the linked list, containing a value
 */
@final
pub class ListNode {T} {

    /// The reference to the previous node
    pub let dmut prev : (&ListNode!{T})?;

    /// The reference to the next node
    pub let dmut next : (&ListNode!{T})?;

    /// The value contained in the node
    pub let value : T;

    /**
     * Create a new node of the list
     * @params:
     *    - val: the value to store
     *    - prev: the reference to the previous node in the list
     *    - next: the reference to the next node in the list
     */
    pub self (val : T, dmut prev : (&ListNode!T)?, dmut next : (&ListNode!T)?)
        with prev = alias prev
        , next = alias next
        , value = val
    {}

}
