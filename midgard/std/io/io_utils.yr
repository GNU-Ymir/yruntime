in io_utils;

pub {
    extern (C) static stderr : *void;

    /**
     * Put a simple ascii char on stdout
     */
    extern (C) fn putchar (c : c8);

    /**
     * Put a simple ascii char to fd
     */
    extern (C) fn putc (c : c8, fd : *void);

    /**
     * Runtime function that write a c32 char on stdout
     */
    extern (C) fn _yrt_putwchar (c : c32);

    /**
     * Runtime function that write a c32 char on stderr
     */
    extern (C) fn _yrt_eputwchar (c : c32);

    /**
     * Runtime function that read a c32 char from stdin
     */
    extern (C) fn _yrt_getwchar ()-> c32;

    /**
     * C printf function
     */
    extern (C) fn printf (c : *c8, ...);

    /**
     * C fprintf function
     */
    extern (C) fn fprintf (fd : *void, c : *c8, ...);

    /**
     * C scanf function
     */
    extern (C) fn scanf (c : *c8, ...);

    /**
     * Runtime function that prints a f32 to stdout
     */
    extern (C) fn _yrt_printf32 (f : f32);

    /**
     * Runtime function that prints a f64 to stdout
     */
    extern (C) fn _yrt_printf64 (f : f64);

    /**
     * Runtime function that prints a f80 to stdout
     * */
    extern (C) fn _yrt_printf80 (f : f80);

    /**
     * Runtime function that prints a fsize to stdout
     * */
    extern (C) fn _yrt_printfsize (f : fsize);

    /**
     * Runtime function that prints a f32 to stderr
     */
    extern (C) fn _yrt_eprintf32 (f : f32);

    /**
     * Runtime function that prints a f64 to stderr
     */
    extern (C) fn _yrt_eprintf64 (f : f64);

    /**
     * Runtime function that prints a f80 to stderr
     */
    extern (C) fn _yrt_eprintf80 (f : f80);

    /**
     * Runtime function that prints a fsize to stderr
     */
    extern (C) fn _yrt_eprintfsize (f : fsize);

    /**
     * flush the stdout for immediate printing
     */
    extern (C) fn _yrt_fflush_stdout ();
}



pub mod etc {
    /**
     * FILE STDIN Number
     */
    pub def STDIN_FILENO  = 0u32;

    pub def STDOUT_FILENO = 1u32;

    pub def STDERR_FILENO = 2u32;

    pub def O_NONBLOCK = 2048u32;

    pub def EOF = 0;

    pub extern (C) fn read (stream : i32, dmut c : *c8, size : usize)-> isize;

    pub extern (C) fn write (stream : i32, c : *c8, size : usize)-> isize;


    pub def stdin  = 0;
    pub def stdout = 1;
    pub def stderr = 2;

}
