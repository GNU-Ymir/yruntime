in float;

use std::{stream, conv};

/**
 * Configuration encoding of a float (f64)
 * @example:
 * ```
 * let node : &Config = copy Float (12.48)
 *
 * match node {
 *    Float (value-> f) => assert (f == 12.48);
 * }
 * ```
 */
@final
pub class Float over Config {

    let _f : f64;

    /**
     * Create a Float containing the value `f`
     */
    pub self (f : f64)
        with _f = f
    {}

    /**
     * @returns: the value contained in the config
     * */
    @field
    pub fn value (self)-> f64 {
        self._f
    }

    impl Streamable {
        pub over toStream (self, dmut stream : &StringStream)-> void {
            stream:.write ("Float ("s8):.write (self._f):.write (")"s8);
        }
    }
}
