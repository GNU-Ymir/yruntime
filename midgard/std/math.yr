mod std::math;

pub aka PI =         3.14159265358979323846;
pub aka PI_2 =       1.57079632679489661923;
pub aka PI_4 =       0.785398163397448309616;
pub aka M_1_PI =     0.318309886183790671538;
pub aka M_2_PI =     2.0*M_1_PI;                              


mod Runtime {
    pub extern (C) def sqrt (x : f64)-> f64;
    pub extern (C) def sqrtf (x : f32)-> f32;
    pub extern (C) def roundf (x : f32)-> f32;
}

pub def sqrt (x : f32)-> f32 {
    Runtime::sqrtf (x)
}

pub def sqrt (x : f64)-> f64 {
    Runtime::sqrt (x)
}

pub def pow (x : isize, y : isize)-> isize {
    let mut res = x;
    for _ in 0is .. y {
        res = res * x;
    }
    res
}


pub def round (x : f32, nb : u32)-> f32 {
    import std::conv;
    let p = pow (10is, cast!isize (nb)).to!f32 ();
    Runtime::roundf (x * p) / p 
}

