mod array;


pub fn outOfArray () {}

pub fn opEquals {T of [U], U} (a : T, b : T)-> bool {
    if (a.len != b.len) { return false }
    for i in 0us .. a.len {
        if (a [i] != b [i]) return false;
    }

    true
}

pub fn opCmp {T of [U], U} (a : T, b : T)-> i32 {
    let mi = if (b.len > a.len) { a.len } else { b.len };
    for i in 0us .. mi {
        if (a [i] < b [i]) return -1;
        else if (a [i] > b [i]) return 1;
    }

    if (a.len > b.len) return 1;
    else if (a.len < b.len) return -1;
    else return 0;
}


