#ifndef TYPES_H_
#define TYPES_H_

#include <stdint.h>

/*!
 * ====================================================================================================
 * ====================================================================================================
 * =================================          ARRAYS/SLICES          ==================================
 * ====================================================================================================
 * ====================================================================================================
 */

typedef struct {
	uint64_t len;
	uint64_t cap;
} _yrt_slice_blk_info_;

typedef struct {
    uint64_t len;
    void * data;
    _yrt_slice_blk_info_ * blk_info;
} _yrt_slice_;

/*!
 * ====================================================================================================
 * ====================================================================================================
 * ====================================          COPY MAP          ====================================
 * ====================================================================================================
 * ====================================================================================================
 */

struct _yrt_dcopy_map_node {
    unsigned long len;
    unsigned long used;
    void** from;
    void** to;
};

/*!
 * ====================================================================================================
 * ====================================================================================================
 * ======================================          LAZY          ======================================
 * ====================================================================================================
 * ====================================================================================================
 */

struct _yrt_lazy_closure {
    void * closure;
    void (*func) (void* closure, void*ret);
};

struct _yrt_lazy_value {
    unsigned char set;
    void* data;
    uint32_t size;
    struct _yrt_lazy_closure closure;
};

/*!
 * ====================================================================================================
 * ====================================================================================================
 * ====================================          TYPEINFO          ====================================
 * ====================================================================================================
 * ====================================================================================================
 */

typedef struct {
    unsigned int id;
    unsigned long long size;
    _yrt_slice_ inner;
    _yrt_slice_ name;
}  _yrt_type_info;

enum _yrt_type_ids {
    ARRAY        = 1,
    BOOL_        = 2,
    CHAR_        = 3,
    CLOSURE      = 4,
    FLOAT_       = 5,
    FUNC_PTR     = 6,
    SIGNED_INT   = 7,
    UNSIGNED_INT = 8,
    POINTER      = 9,
    SLICE        = 10,
    STRUCT       = 11,
    TUPLE        = 12,
    OBJECT       = 13,
    VOID_         = 14,
};


#endif // TYPES_H_
