mod core::typeinfo;
import core::array;
import std::io;
import core::exception

/**
 * This module list all the possible type info, and the system to compare type at runtime
 */
    
pub struct
| typeid : u32
| size   : usize
| inner  : [TypeInfo]
| name   : [c32] 
 -> TypeInfo;

pub enum : u32
| ARRAY        = 1u32
| BOOL         = 2u32
| CHAR         = 3u32
| CLOSURE      = 4u32
| FLOAT        = 5u32
| FUNC_PTR     = 6u32
| SIGNED_INT   = 7u32
| UNSIGNED_INT = 8u32
| POINTER      = 9u32
| SLICE        = 10u32
| STRUCT       = 11u32
| TUPLE        = 12u32
| OBJECT       = 13u32
| VOID         = 14u32
 -> TypeIDs;

extern (C) def _yrt_type_equals (a : TypeInfo, b : TypeInfo)-> bool;

pub def equals (left : TypeInfo, right : TypeInfo) -> bool
    _yrt_type_equals (left, right)
    


