
/**
 * This module implements comparison functions for custom types.
 * @Authors: Emile Cadorel
 * @License: GPLv3
 */

mod core::comparison;
import std::io;

/**
 * Compare two structure of the same type.
 * @info: `a` is equal to `b` if all their fields are equal
 */
pub fn opEquals {struct T} (a : T, b : T)-> bool {
    cte for i in 0u32 .. typeof ((__pragma!tupleof (a)))::arity {        
        if ((__pragma!tupleof (a)).(i) != (__pragma!tupleof (b)).(i)) return false;
    }

    return true;
}
