mod core::range

pub def step_by {T} (x : ..T, s : T)-> ..T {
    let mut z = x;
    z.step = cast!(typeof x.step) (s);
    return z;
}

pub def opContains {T} (range : ..T, x : T) -> bool {
    if (range.contain) {
        if range.fst < range.scd {
            x >= range.fst && x <= range.scd
        } else {
            x >= range.scd && x <= range.fst
        }
    } else {
        if range.fst < range.scd {
            x >= range.fst && x < range.scd
        } else {
            x >= range.scd && x < range.fst
        }
    }
}
